{"ast":null,"code":"var _jsxFileName = \"/home/kennedymungai/Documents/FrontEnd/InBrowserMinecraftClone/src/components/TextureSelector.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useStore } from \"../hooks/useStore\";\nimport { useKeyboard } from \"../hooks/useKeyboard\";\nimport { dirtImg, grassImg, glassImg, logImg, woodImg } from '../images/images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  dirt: dirtImg,\n  grass: grassImg,\n  glass: glassImg,\n  wood: woodImg,\n  log: logImg\n};\nexport const TextureSelector = () => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [activeTexture, setTexture] = useStore(state => [state.texture, state.setTexture]);\n  const {\n    dirt,\n    grass,\n    glass,\n    wood,\n    log\n  } = useKeyboard();\n  useEffect(() => {\n    const textures = {\n      dirt,\n      grass,\n      glass,\n      wood,\n      log\n    };\n    const pressedTexture = Object.entries(textures).find(_ref => {\n      let [k, v] = _ref;\n      return v;\n    });\n\n    if (pressedTexture) {\n      setTexture(pressedTexture[0]);\n    }\n  }, [setTexture, dirt, grass, glass, wood, log]);\n  useEffect(() => {\n    const visibilityTimeout = setTimeout(() => {\n      setVisible(false);\n    }, 2000);\n    setVisible(true);\n    return () => {\n      clearTimeout(visibilityTimeout);\n    };\n  }, [activeTexture]);\n  return visible && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute centered texture-selector\",\n    children: Object.entries(images).map(_ref2 => {\n      let [k, src] = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: k,\n        className: `${k === activeTexture ? 'active' : ''}`\n      }, k, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TextureSelector, \"+AX0F8+pCYtz6m90GA15hdA/+/Q=\", false, function () {\n  return [useStore, useKeyboard];\n});\n\n_c = TextureSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextureSelector\");","map":{"version":3,"names":["useEffect","useState","useStore","useKeyboard","dirtImg","grassImg","glassImg","logImg","woodImg","images","dirt","grass","glass","wood","log","TextureSelector","visible","setVisible","activeTexture","setTexture","state","texture","textures","pressedTexture","Object","entries","find","k","v","visibilityTimeout","setTimeout","clearTimeout","map","src"],"sources":["/home/kennedymungai/Documents/FrontEnd/InBrowserMinecraftClone/src/components/TextureSelector.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useStore } from \"../hooks/useStore\"\nimport { useKeyboard } from \"../hooks/useKeyboard\"\nimport { dirtImg, grassImg, glassImg, logImg, woodImg } from '../images/images'\n\nconst images = {\n\tdirt: dirtImg,\n\tgrass: grassImg,\n\tglass: glassImg,\n\twood: woodImg,\n\tlog: logImg,\n}\n\nexport const TextureSelector = () => {\n\tconst [visible, setVisible] = useState(false)\n\tconst [activeTexture, setTexture] = useStore((state) => [state.texture, state.setTexture])\n\tconst {\n\t\tdirt,\n\t\tgrass,\n\t\tglass,\n\t\twood,\n\t\tlog,\n\t} = useKeyboard()\n\n\tuseEffect(() => {\n\t\tconst textures = {\n\t\t\tdirt,\n\t\t\tgrass,\n\t\t\tglass,\n\t\t\twood,\n\t\t\tlog\n\t\t}\n\t\tconst pressedTexture = Object.entries(textures).find(([k, v]) => v)\n\t\tif (pressedTexture) {\n\t\t\tsetTexture(pressedTexture[0])\n\t\t}\n\t}, [setTexture, dirt, grass, glass, wood, log])\n\n\n\n\tuseEffect(() => {\n\t\tconst visibilityTimeout = setTimeout(() => {\n\t\t\tsetVisible(false)\n\t\t}, 2000)\n\t\tsetVisible(true)\n\t\treturn () => {\n\t\t\tclearTimeout(visibilityTimeout)\n\t\t}\n\t}, [activeTexture])\n\n\treturn visible && (\n\t\t<div className='absolute centered texture-selector'>\n\t\t\t{Object.entries(images).map(([k, src]) => {\n\t\t\t\treturn (<img\n\t\t\t\t\tkey={k}\n\t\t\t\t\tsrc={src}\n\t\t\t\t\talt={k}\n\t\t\t\t\tclassName={`${k === activeTexture ? 'active' : ''}`}\n\t\t\t\t/>)\n\t\t\t})}\n\t\t</div>\n\t)\n}"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,MAAtC,EAA8CC,OAA9C,QAA6D,kBAA7D;;AAEA,MAAMC,MAAM,GAAG;EACdC,IAAI,EAAEN,OADQ;EAEdO,KAAK,EAAEN,QAFO;EAGdO,KAAK,EAAEN,QAHO;EAIdO,IAAI,EAAEL,OAJQ;EAKdM,GAAG,EAAEP;AALS,CAAf;AAQA,OAAO,MAAMQ,eAAe,GAAG,MAAM;EAAA;;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACiB,aAAD,EAAgBC,UAAhB,IAA8BjB,QAAQ,CAAEkB,KAAD,IAAW,CAACA,KAAK,CAACC,OAAP,EAAgBD,KAAK,CAACD,UAAtB,CAAZ,CAA5C;EACA,MAAM;IACLT,IADK;IAELC,KAFK;IAGLC,KAHK;IAILC,IAJK;IAKLC;EALK,IAMFX,WAAW,EANf;EAQAH,SAAS,CAAC,MAAM;IACf,MAAMsB,QAAQ,GAAG;MAChBZ,IADgB;MAEhBC,KAFgB;MAGhBC,KAHgB;MAIhBC,IAJgB;MAKhBC;IALgB,CAAjB;IAOA,MAAMS,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeH,QAAf,EAAyBI,IAAzB,CAA8B;MAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAYA,CAAZ;IAAA,CAA9B,CAAvB;;IACA,IAAIL,cAAJ,EAAoB;MACnBJ,UAAU,CAACI,cAAc,CAAC,CAAD,CAAf,CAAV;IACA;EACD,CAZQ,EAYN,CAACJ,UAAD,EAAaT,IAAb,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,GAAvC,CAZM,CAAT;EAgBAd,SAAS,CAAC,MAAM;IACf,MAAM6B,iBAAiB,GAAGC,UAAU,CAAC,MAAM;MAC1Cb,UAAU,CAAC,KAAD,CAAV;IACA,CAFmC,EAEjC,IAFiC,CAApC;IAGAA,UAAU,CAAC,IAAD,CAAV;IACA,OAAO,MAAM;MACZc,YAAY,CAACF,iBAAD,CAAZ;IACA,CAFD;EAGA,CARQ,EAQN,CAACX,aAAD,CARM,CAAT;EAUA,OAAOF,OAAO,iBACb;IAAK,SAAS,EAAC,oCAAf;IAAA,UACEQ,MAAM,CAACC,OAAP,CAAehB,MAAf,EAAuBuB,GAAvB,CAA2B,SAAc;MAAA,IAAb,CAACL,CAAD,EAAIM,GAAJ,CAAa;MACzC,oBAAQ;QAEP,GAAG,EAAEA,GAFE;QAGP,GAAG,EAAEN,CAHE;QAIP,SAAS,EAAG,GAAEA,CAAC,KAAKT,aAAN,GAAsB,QAAtB,GAAiC,EAAG;MAJ3C,GACFS,CADE;QAAA;QAAA;QAAA;MAAA,QAAR;IAMA,CAPA;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AAYA,CAjDM;;GAAMZ,e;UAEwBb,Q,EAOhCC,W;;;KATQY,e"},"metadata":{},"sourceType":"module"}